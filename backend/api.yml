openapi: "3.0.0"
info:
  title: Online Store API
  contact:
    email: m.ahmed141@hotmail.com
    name: Mohamed Ahmed
  description: It exposes a RESTful API that will be used by the frontend developer
  version: 1.0.0

servers:
  - url: http://localhost:5000

components:
  schemas:
    order:
      type: object
      required:
        - order_id
        - order_status
        - purchase_date 
        - delivery_date
        - id
      properties:
        order_id:
          type: string
          format: BIGSERIAL PRIMARY KEY

        order_status:
          type: string
          maxLength: 64

        purchase_date :
          type: string
          maxLength: 64

        delivery_date:
          type: string
          maxLength: 64

        id:
          type: string
          maxLength: 64
          description: order_id

      example:
        order_id: '50'
        order_status: pending
        purchase_date: 2022-06-07
        delivery_date: 2022-06-07
        id: b7a12419-d9e7-4c7c-964b-982dcf3ad097
    Error:
      type: object
      properties:
        statusCode:
          type: integer
        message:
          type: string
          
  securitySchemes:
    bearerAuth:        
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/Error'
          example:
            status: 401
            message: Error.
#Post Request to create new order
paths:
  /orders:
    post:
      summary: Create new order.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/oders'                        
      security:
        - bearerAuth: []
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode: 
                    type: integer
                  data: 
                    type: object

                    properties:
                      order_id:
                        type: string
                        format: BIGSERIAL PRIMARY KEY

                      order_status:
                        type: string
                        
                      purchase_date:
                        type: string
                      
                      delivery_date:
                        type: string
                      id:
                        type: string
                      
                      token: 
                          type: object    
                  message:
                    type: string
                    description: New order was created
              example:
                statusCode: 200
                data:
                  order_id: '50'
                  order_status: 'Pending'
                  purchase_date: '2022-06-07'
                  delivery_date: '2022-06-07'
                  id: '7a12419-d9e7-4c7c-964b-982dcf3ad07'
                  token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7InVzZXJfaWQiOiJlYjdiNjEyNC01N2FmLTQ2MWItOTA5OC0xYzA5MjNlMmUwMmIiLCJ1c2VyX25hbWUiOiJhaG1lZGVsa2luZyIsImZpcnN0X25hbWUiOiJhaG1lZCIsImxhc3RfbmFtZSI6InNhYWQiLCJlbWFpbCI6ImFobUB5YWhvby5jb20ifSwiaWF0IjoxNjU0NDU5MzU2fQ.rl6oZ_qMO7gqnB7suB-SJHPM5AvZLxaxERzSeaq8Fbo
                  message: order created successfully
        '400':
            description: ''
            content:
              application/json:
                schema:
                  $ref: '#/components/Error'
                example:
                  statusCode: 400
                  message: Cannot add a new Order
        '500':
            description: internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/Error'
                example:
                  statusCode: 500
                  messageData: Error. 
#Get Request with path id
  /orders/:id:
    get:
      summary: Get an order.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/oders'                        
      security:
        - bearerAuth: []
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode: 
                    type: string
                    description: '200'
                  data: 
                    type: object
                    properties:
                      order_id:
                        type: string
                        format: BIGSERIAL PRIMARY KEY

                      order_status:
                        type: string
                        
                      purchase_date:
                        type: string
                      
                      delivery_date:
                        type: string
                      
                      token: 
                          type: object
                  message:
                    type: string
                    description: show certain order'}
              example:
                statusCode: 200
                data:
                  id: 50
                  order_status: 'Pending'
                  purchase_date: '2022-06-07'
                  delivery_date: '2022-06-07'
                  token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7InVzZXJfaWQiOiJlYjdiNjEyNC01N2FmLTQ2MWItOTA5OC0xYzA5MjNlMmUwMmIiLCJ1c2VyX25hbWUiOiJhaG1lZGVsa2luZyIsImZpcnN0X25hbWUiOiJhaG1lZCIsImxhc3RfbmFtZSI6InNhYWQiLCJlbWFpbCI6ImFobUB5YWhvby5jb20ifSwiaWF0IjoxNjU0NDU5MzU2fQ.rl6oZ_qMO7gqnB7suB-SJHPM5AvZLxaxERzSeaq8Fbo
                  message: show certain order'
        '401':
            $ref: '#/components/responses/UnauthorizedError'  
        
        default:
            description: error
            content:
              application/json:
                schema:
                  $ref: '#/components/Error'
                example:
                  statusCOde: 400
